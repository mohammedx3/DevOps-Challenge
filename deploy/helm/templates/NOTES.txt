1. Get the application URL by running these commands:
{{- if and (hasKey .Values "ingress") .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "tornado-app.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch its status by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "tornado-app.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "tornado-app.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "tornado-app.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:{{ .Values.service.port }} to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME {{ .Values.service.port }}:{{ .Values.service.targetPort }}
{{- end }}

{{- if .Values.redis.enabled }}
2. Redis is deployed as part of this release. You can connect to it using:
   Redis Host: {{ .Release.Name }}-redis-master
   Redis Port: 6379
   {{- if .Values.redis.auth.enabled }}
   Redis is password protected. The password is stored in a secret.
   To retrieve the password, run:
   
   kubectl get secret --namespace {{ .Release.Namespace }} {{ .Release.Name }}-redis -o jsonpath="{.data.redis-password}" | base64 --decode
   {{- end }}
{{- end }}

{{- if .Values.autoscaling.enabled }}
3. Your application is configured with autoscaling:
   Min replicas: {{ .Values.autoscaling.minReplicas }}
   Max replicas: {{ .Values.autoscaling.maxReplicas }}
   Target CPU utilization: {{ .Values.autoscaling.targetCPUUtilizationPercentage }}%
   
   Monitor scaling events with:
   kubectl get hpa -n {{ .Release.Namespace }}
{{- end }}

4. View application logs:
   kubectl logs -f deployment/{{ include "tornado-app.fullname" . }} -n {{ .Release.Namespace }}
